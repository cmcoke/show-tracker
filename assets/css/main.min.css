/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */@import url(https://fonts.googleapis.com/css?family=Montserrat:400,500,700&display=swap);html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{line-height:1.15;font-family:sans-serif;font-size:100%;margin:0}button{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}/*! Flickity v2.2.0
https://flickity.metafizzy.co
---------------------------------------------- */.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:rgba(255,255,255,.75);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}*,::after,::before{box-sizing:border-box}body,html{height:100%}body{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.content{-webkit-box-flex:1;flex:1 0 auto}.footer{flex-shrink:0}img{max-width:100%;height:auto}a{text-decoration:none}ul{list-style:none;margin:0;padding:0}li{list-style:none}body{font-family:Montserrat,sans-serif}.btn{background-color:#540cfa;color:#fff;text-decoration:none;padding:10px 22px;border-radius:5px;display:inline-block}.btn--header{padding-right:14px;padding-left:14px}.btn--hero{border:none;padding-top:15px;padding-bottom:15px;font-family:Montserrat,sans-serif;cursor:pointer;width:101%}@media (min-width:768px){.btn--hero{padding-top:11px;padding-bottom:11px;width:80%;margin-top:9px}}@media (min-width:1024px){.btn--hero{padding-top:11px;padding-bottom:11px;width:31%}}.btn--started{border:none;padding-top:15px;padding-bottom:15px;font-family:Montserrat,sans-serif;cursor:pointer;width:101%}@media (min-width:768px){.btn--started{width:25%;padding-top:11px;padding-bottom:11px}}@media (min-width:1116px){.btn--started{width:20%;padding-top:11px;padding-bottom:11px}}@media (min-width:1366px){.btn--started{width:15%}}.btn--community{padding-top:14px;padding-bottom:14px}.container{max-width:315px;margin:0 auto;padding:0 11px}@media screen and (min-width:400px){.container{max-width:1300px;padding:0 18px}}.heading{font-weight:700}.heading--hero{font-size:calc(1.875rem + 2.5 * ((100vw - 26.25rem)/ 53.75));line-height:35px;margin-bottom:0}@media screen and (min-width:1280px){.heading--hero{font-size:4.375rem}}@media screen and (max-width:420px){.heading--hero{font-size:1.875rem}}@media (min-width:768px){.heading--hero{font-size:44px;line-height:48px}}@media (min-width:1024px){.heading--hero{font-size:52px;line-height:55px}}.heading--features{font-size:30px;line-height:34px;margin-top:10px}@media (min-width:504px){.heading--features{font-size:35px;line-height:37px}}@media (min-width:768px){.heading--features{font-size:47px;line-height:49px;width:700px;margin:10px auto 10px auto}}@media (min-width:1024px){.heading--features{font-size:60px;line-height:65px;width:700px;margin:10px auto 10px auto}}.heading--platform{font-size:25px;line-height:30px}@media (min-width:768px){.heading--platform{width:450px;font-size:36px;line-height:42px}}@media (min-width:1024px){.heading--platform{width:600px;font-size:50px}}@media (min-width:1030px){.heading--platform{width:499px;font-size:40px}}@media (min-width:1034px){.heading--platform{width:499px;font-size:45px;line-height:50px}}.heading--community{font-size:32px;line-height:38px;margin-top:11px;margin-bottom:-1px}@media (min-width:768px){.heading--community{font-size:42px;line-height:49px;margin-top:11px;margin-bottom:-1px;width:500px}}.heading--started{font-size:35px;line-height:40px;margin:-10px auto 10px auto}@media (min-width:768px){.heading--started{font-size:60px;line-height:63px;width:606px;margin:0 auto 10px auto}}.section{font-size:12px;color:#bdbdbd;letter-spacing:1px}.section--hero{text-transform:uppercase;text-align:center}@media (min-width:768px){.section--hero{text-align:left}}@media (min-width:1024px){.section--hero{text-align:left}}.section--features{text-align:center;font-size:15px;margin-bottom:0}.section--community{font-size:15px;line-height:28px;margin-bottom:0}@media (min-width:768px){.section--community{font-size:15px;line-height:28px;margin-bottom:0;width:520px}}.section--started{font-size:15px}.text-content{font-weight:300}.text-content--hero{font-size:calc(1.125rem + .125 * ((100vw - 26.25rem)/ 53.75));line-height:27px}@media screen and (min-width:1280px){.text-content--hero{font-size:1.25rem}}@media screen and (max-width:420px){.text-content--hero{font-size:1.125rem}}@media (min-width:768px){.text-content--hero{line-height:32px;width:422px}}@media (min-width:1024px){.text-content--hero{line-height:32px;width:570px}}.text-content--features{font-size:16px;line-height:26px}@media (min-width:504px){.text-content--features{font-size:18px}}@media (min-width:768px){.text-content--features{font-size:18px;line-height:28px;width:610px;margin:20px auto 60px auto}}.text-content--platform{font-size:16px;line-height:32px;margin-top:-10px}@media (min-width:768px){.text-content--platform{font-size:18px;line-height:32px;width:520px;margin-top:-10px}}@media (min-width:944px){.text-content--platform{font-size:18px;line-height:32px;width:581px;margin-top:-10px}}@media (min-width:1024px){.text-content--platform{font-size:18px;line-height:32px;width:600px;margin-top:-10px}}@media (min-width:1034px){.text-content--platform{font-size:18px;line-height:32px;width:502px;margin-top:-10px}}.text-content--community{color:#bdbdbd;font-size:18px;line-height:25px}@media (min-width:768px){.text-content--community{line-height:32px;margin-top:25px;margin-bottom:30px;width:470px}}.text-content--started{font-size:16px;line-height:30px}@media (min-width:768px){.text-content--started{font-size:18px;line-height:32px;width:600px;margin:20px auto 30px auto}}.input{font-family:Montserrat,sans-serif}.input--hero{width:100%;padding:15px 20px;margin:8px 4px 15px 4px;border-radius:5px;border:1px solid #c4c4c4;-webkit-transition:ease-in .2s;transition:ease-in .2s}@media (min-width:768px){.input--hero{width:80%;padding:11px 20px;margin:8px 0}}@media (min-width:1024px){.input--hero{width:40%;padding:11px 20px;margin:8px 0}}.input--hero:focus{outline:0!important;border-color:#540cfa}.input--started{width:100%;padding:15px 20px;margin:8px 4px 15px 4px;border-radius:5px;border:1px solid #c4c4c4;-webkit-transition:ease-in .2s;transition:ease-in .2s}@media (min-width:768px){.input--started{width:40%;padding:11px 20px;margin:8px 0}}@media (min-width:1116px){.input--started{width:30%}}@media (min-width:1366px){.input--started{width:23%}}.input--started:focus{outline:0!important;border-color:#540cfa}.carousel-cell{position:relative;height:auto;width:100%;padding:2rem}@media (min-width:576px) and (max-width:767px){.carousel-cell{width:50%;padding:.3rem}}@media (min-width:768px) and (max-width:991px){.carousel-cell{width:33%;padding:.3rem}}@media (min-width:992px) and (max-width:1280px){.carousel-cell{width:25%;padding:.4rem}}@media (min-width:1281px){.carousel-cell{width:17%;padding:.2rem}}.header{background:#fff;border-bottom:1px solid #ebebeb}@media screen and (min-width:768px){.header{position:fixed;top:0;width:100%;z-index:1}}.header__shapes{width:100%;margin:0 auto;position:absolute;overflow:none;z-index:-1}@media (min-width:1628px){.header__shapes{width:100%;margin:0 auto;position:absolute;overflow:hidden;z-index:-1}}.header__shape--1{display:none}@media (min-width:1628px){.header__shape--1{display:inline;position:relative;right:300px;top:100px}}.header__shape--2{display:none}@media (min-width:1628px){.header__shape--2{display:inline;position:relative;left:750px;bottom:250px}}.header__wrapper{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;padding-top:20px;padding-bottom:10px}.header__nav{display:none}@media (min-width:768px){.header__nav{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.header__nav li{margin-left:50px}.header__nav a{color:#000;font-weight:500;font-size:14px}}.header__login{display:none}@media (min-width:768px){.header__login{display:block}}.header__login-started{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.header__login-started li{margin-left:30px;font-size:14px}.header__login{color:#000;font-weight:600}.hero{z-index:2}@media (min-width:768px){.hero{padding-top:91px}}@media (min-width:768px){.hero__wrapper{display:-webkit-box;display:flex}}.hero__text-content{margin-top:50px}@media (min-width:768px){.hero__text-content{width:700px;margin-top:43px}}@media (min-width:1024px){.hero__text-content{width:700px;margin-top:46px}}.hero__compatiable-content{margin-top:50px;text-align:center}@media (min-width:768px){.hero__compatiable-content{text-align:left;margin-top:80px}}.hero__compatiable-list img{width:40px;margin-left:11px}@media (min-width:768px){.hero__compatiable-list img{margin-right:20px;width:50px}}@media (min-width:1024px){.hero__compatiable-list img{margin-right:14px;width:50px}}.hero__phone-img{display:block;margin-left:11px;margin-right:auto;margin-left:auto;margin-top:30px;width:300px}@media (min-width:768px){.hero__phone-img{display:inline;margin-top:55px;margin-left:10px;margin-right:0}}@media (min-width:1024px){.hero__phone-img{display:inline;margin-top:55px;margin-left:27px;margin-right:0;width:400px}}@media (min-width:768px){.features{padding:50px 0 30px 0}}.features__text-content{text-align:center;margin-top:30px}@media (min-width:504px){.features__text-content{margin-top:-22px}}@media (min-width:768px){.features__text-content{margin-top:0}}.features__list{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}@media (min-width:768px){.features__list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}}.features__type{text-align:center;width:300px;line-height:24px;margin:30px auto}@media (min-width:504px){.features__type{margin:23px auto}}@media (min-width:768px){.features__type{margin:0 auto}}.features__type img{margin-bottom:0}.features__type h3{margin:0}.features__type p{margin:11px 0}.features__type a{color:#540cfa;font-weight:600}.shows{padding:.5rem 0}@media (min-width:768px){.shows{padding-top:27px;padding-bottom:30px}}@media (min-width:814px){.shows{padding-top:79px;padding-bottom:47px}}@media (min-width:1192px){.shows{padding-bottom:115px}}@media (min-width:1366px){.shows{padding-bottom:151px}}@media (min-width:768px){.platform{padding:30px 0 112px 0}}@media (min-width:1048px){.platform{padding:30px 0 108px 0}}.platform__wrapper{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}@media (min-width:768px){.platform__wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}}.platform__lists{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.platform__lists p{margin-left:13px}@media (min-width:768px){.platform__img{display:-webkit-box;display:flex}}.platform__phone{display:block;margin-top:30px;margin-left:auto;margin-right:auto}@media (min-width:768px){.platform__phone{display:inline;position:relative;top:26px;width:300px;margin-top:0}}@media (min-width:1024px){.platform__phone{widtH:300px;left:71px}}@media (min-width:1030px){.platform__phone{left:63px}}@media (min-width:1034px){.platform__phone{left:119px;top:11px}}@media (min-width:1040px){.platform__phone{left:-11px;top:100px}}@media (min-width:1045px){.platform__phone{left:114px;top:21px}}@media (min-width:1188px){.platform__phone{left:-14px}}@media (min-width:1576px){.platform__phone{left:55px}}.platform__web-app{display:none}@media (min-width:1030px){.platform__web-app{display:none}}@media (min-width:1034px){.platform__web-app{display:none}}@media (min-width:1188px){.platform__web-app{display:inline;position:relative;top:-56px;right:283px;z-index:-1}}@media (min-width:1576px){.platform__web-app{right:139px}}.community{background-color:#000;color:#fff;overflow:hidden;height:800px}@media (min-width:768px){.community{height:800px}}.community__wrapper{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;margin-top:-139px}@media (min-width:738px){.community__wrapper{margin-top:-75px}}@media (min-width:768px){.community__wrapper{-webkit-box-pack:justify;justify-content:space-between;margin-top:0}}.community__mobile-images{margin-top:-165px;width:260px}@media (min-width:738px){.community__mobile-images{margin-top:-134px}}@media (min-width:768px){.community__mobile-images{display:none}}.community__mobile-images-1{background-color:#191717}.community__mobile-images-2{position:relative;top:-215px;left:268px;height:210px;background-color:#191717}.community__mobile-images-3{position:relative;top:-429px;left:536px;height:210px;background-color:#191717}.community__images{display:none}@media (min-width:768px){.community__images{display:-webkit-box;display:flex}}.community__text-content{margin:200px 0}@media (min-width:768px){.community__images--1{position:relative;bottom:873px;left:481px}}@media (min-width:1188px){.community__images--1{left:581px}}@media (min-width:768px){.community__images--2{display:none}}@media (min-width:768px){.community__images--2{display:inline;position:relative;bottom:799px;left:494px}}@media (min-width:768px){.community__images--2{display:inline;position:relative;bottom:799px;left:494px}}@media (min-width:1188px){.community__images--2{left:627px}}.started{padding:5rem 0}.started__wrapper{text-align:center}.footer{text-align:center;font-size:14px;line-height:18px}.footer a{color:#540cfa}.footer__social-links{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;margin-bottom:30px;margin-right:25px}.footer__social-links li{padding-left:18px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
